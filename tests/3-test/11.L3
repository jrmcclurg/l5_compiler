;; EECS 322 Compiler Construction
;; Test-3 Assignment (Test Cases for L3)
;; 5-3-12

;; Simple L3 program which implements
;; a dumb n^2 selection sort on an array of numbers
(
  ;; this is the program entry point
  (let ([len 20])
  (let ([arr (new-array len 0)])
  (let ([temp (aset arr 0 75)])
  (let ([temp (aset arr 1 66)])
  (let ([temp (aset arr 2 61)])
  (let ([temp (aset arr 3 78)])
  (let ([temp (aset arr 4 80)])
  (let ([temp (aset arr 5 28)])
  (let ([temp (aset arr 6 46)])
  (let ([temp (aset arr 7 74)])
  (let ([temp (aset arr 8 43)])
  (let ([temp (aset arr 9 69)])
  (let ([temp (aset arr 10 59)])
  (let ([temp (aset arr 11 52)])
  (let ([temp (aset arr 12 46)])
  (let ([temp (aset arr 13 34)])
  (let ([temp (aset arr 14 41)])
  (let ([temp (aset arr 15 49)])
  (let ([temp (aset arr 16 24)])
  (let ([temp (aset arr 17 76)])
  (let ([temp (aset arr 18 53)])
  (let ([temp (aset arr 19 6)])
  (let ([temp (print arr)])
  (let ([temp (:sort arr 0)])
  (print arr) ))))))))))))))))))))))))
  (:sort (arr index)
    (let ([len (alen arr)])
    (let ([size (- len index)])
    (let ([c (= size 1)])
    (let ([index2 (+ index 1)])
    (let ([testElem (aref arr index)])
    (let ([theMin (:min arr index testElem)])
    (let ([c2 (< theMin testElem)])
    (if c arr (if c2 (let ([temp (aset arr index theMin)]) (:sort arr index2))
           (:sort arr index2) )) ))))))))
  (:min (arr index testElem)
    (let ([len (alen arr)])
    (let ([c2 (= index len)])
    (if c2 testElem 
      (let ([a (aref arr index)])
      (let ([c (< a testElem)])
      (let ([index2 (+ index 1)])
      (if c (let ([temp (aset arr index testElem)]) (:min arr index2 a))
                          (:min arr index2 testElem) ) )))) )))
)
